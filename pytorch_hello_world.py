# -*- coding: utf-8 -*-
"""Pytorch_Hello_World.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gUspdyLQOtduw9x6drCr4p8omeYW6PW5
"""

import torch
from torchvision import datasets, transforms

from torch.utils.data import DataLoader, random_split
import torch.nn as nn
import torch.nn.functional as F
import torch.optim as optim
import matplotlib.pyplot as plt

torch.randn(5).cuda() #Test for GPU

#Data Loader
train_data = datasets.MNIST('data', train=True, download=True, transform=transforms.ToTensor())
train,val = random_split(train_data, [55000, 5000])
train_loader = DataLoader(train, batch_size=32)
val_loader = DataLoader(val,batch_size = 32)

model = nn.Sequential( # build nn - TODO: play with sizing,etc
   nn.Linear(28*28,64),
   nn.ReLU(),
   nn.Linear(64,64),
   nn.ReLU(),
   nn.Linear(64,20) 
)

optimizer = optim.SGD(model.parameters(),lr=1e-2)#implements gradient descent - what learning rate to actually use???

loss = nn.CrossEntropyLoss()

print("Epoch, Training, Validation"); #Code design from Office Hours tutorial on 2/01/23
nb_epochs=61
for epoch in range(nb_epochs):
  for batch_t in train_loader:
    x_t,y_t = batch_t

    b_t = x_t.size(0)
    x_t=x_t.view(b_t,-1)
    
    #1 logits, forward pass
    l_t=model(x_t) 

    #2 compute loss
    J = loss(l_t,y_t)

    #3 clean gradients - not that imporant for mnist
    model.zero_grad()

    #4 backward pass
    J.backward()

    #5 update weights using gradients
    optimizer.step()

    #losses.append(J.item())
  #print(J.item())#prints the training losses. Should fall over time. Want to run training and validation together
  for batch_v in val_loader:#Val training should saturate at some point and losses should increase
    x_v,y_v = batch_v

    b_v = x_v.size(0)
    x_v=x_v.view(b_v,-1)

    l_v=model(x_v)

    K = loss(l_v,y_v)

    model.zero_grad()

    K.backward()

    optimizer.step()

  print(str(epoch+1) + "," + str(J.item()) + "," + str(K.item()))#prints the train/val losses. Typ use as csv for plotting